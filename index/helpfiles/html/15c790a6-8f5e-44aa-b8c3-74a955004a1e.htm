<html><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>插件化架构</title><meta name="Language" content="zh-cn" /><meta name="Microsoft.Help.Id" content="15c790a6-8f5e-44aa-b8c3-74a955004a1e" /><meta name="Description" content="插件化架构是产品线可变性管理的基础。每一个独立的业务，都应该在一个单独的插件程序集内开发。" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><link rel="stylesheet" type="text/css" href="../styles/Presentation.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">LCL User Guide</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">插件化架构</span></td></tr><tr id="headerTableRow3"><td align="left"><span id="headfeedbackarea" class="feedbackhead"><a href="#" onclick="javascript:SubmitFeedback('minguiluo@163.com','LCL User Guide','','1.0.0.0','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback'); return false;">Send Feedback</a></span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" id="headerBottom"><img id="headerBottomImage" style="display: none;" src="../icons/gradient.gif" /></td></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray">LCL User Guide </span><div class="introduction"><p>插件化架构是产品线可变性管理的基础。每一个独立的业务，都应该在一个单独的插件程序集内开发。</p><div class="mediaNear"><div class="caption">两阶段生命周期</div><img alt="Plugin Architecture" src="../media/Plugin_Architecture.png" /></div><p>This topic contains the following sections.</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#install">插件的加载</a></li><li class="outlineSectionEntry"><a href="#pluCode">IPlugin 类型</a></li><li class="outlineSectionEntry"><a href="#plu">插件的启动级别</a></li><li class="outlineSectionEntry"><a href="#lifeCycle">应用程序生命周期</a></li><li class="outlineSectionEntry"><a href="#other">其它</a></li></ul></div><a name="install"> </a><h1 class="heading"><span onclick="ExpandCollapse(sectionToggleID0EFAAA)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggleID0EFAAA, event)" tabindex="0"><img id="sectionToggleID0EFAAA" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />插件的加载</span></h1><div id="sectionSectionID0EFAAA" class="section" name="collapseableSection"><p>一个开发完成的插件，要加载到主程序中：</p><ul><li><p>运行时加载方式</p><p>这是一般的插件加载方式，需要把插件程序集放到指定的文件夹中，系统在启动时会自动加载该目录下的所有插件。</p><p>插件程序集需要放到 /Plugins/ 文件夹中。如果是 C/S 程序，则客户端和服务端都需要部署，如果是 Web 开发，只需要部署到网站目录中。</p></li></ul></div><a name="pluCode"> </a><h1 class="heading"><span onclick="ExpandCollapse(sectionToggleID0EEAAA)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggleID0EEAAA, event)" tabindex="0"><img id="sectionToggleID0EEAAA" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />IPlugin 类型</span></h1><div id="sectionSectionID0EEAAA" class="section" name="collapseableSection"><p>在 LCL 中，每个插件由一个单独的程序集来表示。而每个插件程序集中，必须有唯一一个插件类型，该类必须实现 IPlugin 接口：</p><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve"><span class="highlight-keyword">namespace</span> LCL
{
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// 插件定义。</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">interface</span> IPlugin
    {
        <span class="highlight-comment">/// &lt;summary&gt;</span>
        <span class="highlight-comment">/// 插件的启动级别</span>
        <span class="highlight-comment">/// &lt;/summary&gt;</span>
        <span class="highlight-keyword">int</span> SetupLevel { <span class="highlight-keyword">get</span>; }

        <span class="highlight-comment">/// &lt;summary&gt;</span>
        <span class="highlight-comment">/// 插件的初始化方法。</span>
        <span class="highlight-comment">/// 框架会在启动时根据启动级别顺序调用本方法。</span>
        <span class="highlight-comment">/// </span>
        <span class="highlight-comment">/// 方法有两个职责：</span>
        <span class="highlight-comment">/// 1.依赖注入。</span>
        <span class="highlight-comment">/// 2.注册 app 生命周期中事件，进行特定的初始化工作。</span>
        <span class="highlight-comment">/// &lt;/summary&gt;</span>
        <span class="highlight-comment">/// &lt;param name="app"&gt;应用程序对象。&lt;/param&gt;</span>
        <span class="highlight-keyword">void</span> Initialize(IApp app);
    }
}</pre></td></tr></table></span></div></div><a name="plu"> </a><h1 class="heading"><span onclick="ExpandCollapse(sectionToggleID0EDAAA)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggleID0EDAAA, event)" tabindex="0"><img id="sectionToggleID0EDAAA" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />插件的启动级别</span></h1><div id="sectionSectionID0EDAAA" class="section" name="collapseableSection"><p /><p>每一个插件程序集，都有它对应的重用级别：主版本重用、部分版本重用、定制化。例如，领域插件程序集中必须有一个从 DomainPlugin 类继承的插件类，该类指定了整个插件的启动级别（启动级别越高，重用级别越高）：</p><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve"><span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// 领域实体插件程序集基类。</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">abstract</span> <span class="highlight-keyword">class</span> DomainPlugin : IPlugin
{
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// 插件的启动级别。</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">virtual</span> <span class="highlight-keyword">int</span> SetupLevel
    {
        <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> ReuseLevel.Main; }
    }
}

<span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// 产品的 “721” 重用级别</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">class</span> ReuseLevel
{
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// 主版本（7）</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> Main = <span class="highlight-number">100</span>;

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// 部分版本（2）</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> Part = <span class="highlight-number">200</span>;

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// 客户化版本（1）</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> Customized = <span class="highlight-number">300</span>;
}</pre></td></tr></table></span></div><p>、可扩展性</p></div><a name="lifeCycle"> </a><h1 class="heading"><span onclick="ExpandCollapse(sectionToggleID0ECAAA)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggleID0ECAAA, event)" tabindex="0"><img id="sectionToggleID0ECAAA" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />应用程序生命周期</span></h1><div id="sectionSectionID0ECAAA" class="section" name="collapseableSection"><p>插件的 Initialize 方法会在启动时根据启动级别顺序被调用。在该方法中，需要注册 app 生命周期中事件，进行特定的初始化工作。以下代码示例如果在运行时启动时，自动升级数据库：</p><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> JXCPlugin : DomainPlugin
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">void</span> Initialize(IApp app)
    {
        <span class="highlight-comment">//在运行时启动时，自动升级数据库。</span>
        app.RuntimeStarting += (o, e) =&gt; AutoUpdateDb();
    }

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// 自动升级数据库。</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> AutoUpdateDb()
    {
        <span class="highlight-comment">//...</span>
    }
}</pre></td></tr></table></span></div><p>IApp 应用程序对象的生命周期如下：</p><div class="code"><span codeLanguage="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve"><span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// 应用程序生成周期定义</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">interface</span> IApp
{
    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// 所有实体元数据初始化完毕，包括实体元数据之间的关系。</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">event</span> EventHandler AllPluginsIntialized;

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// 模块的定义先于其它模型的操作。这样可以先设置好模板默认的按钮。</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">event</span> EventHandler ModuleOperations;

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// 模块的定义完成</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">event</span> EventHandler ModuleOperationsCompleted;

    <span class="highlight-comment">/// &lt;summary&gt;</span>
    <span class="highlight-comment">/// 所有初始化工作完成</span>
    <span class="highlight-comment">/// &lt;/summary&gt;</span>
    <span class="highlight-keyword">event</span> EventHandler AppModelCompleted;

}</pre></td></tr></table></span></div></div><a name="other"> </a><h1 class="heading"><span onclick="ExpandCollapse(sectionToggleID0EBAAA)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggleID0EBAAA, event)" tabindex="0"><img id="sectionToggleID0EBAAA" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />其它</span></h1><div id="sectionSectionID0EBAAA" class="section" name="collapseableSection"><p>
                    关于插件生命周期的设计，参见：<a href="http://www.cnblogs.com/zgynhqf/archive/2011/02/22/1961081.html" target="_blank">使用“管道”与“应用程序生命周期”重构：可插拔模块</a>。
                </p></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss"></span>
罗敏贵@版权所有，有问题请联系minguiluo@163.com<p />有关这个主题的评论请发邮件到
        <a id="HT_MailLink" href="mailto:minguiluo%40163.com?Subject=LCL User Guide">发送反馈</a><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title;
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script><p><a href="http://www.cnblogs.com/luomingui/category/279664.html" target="_blank">LCL User Guide</a></p></div></div></body></html>