<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="save" content="history" />
    <title>规约模式</title>
    <meta name="Language" content="zh-cn" />
    <meta name="Microsoft.Help.Id" content="b21ec496-3470-41d8-b959-5dd8ff43db56" />
    <meta name="Description" content="规约模式就是DDD引入用来解决以上问题的一种特殊的模式。规约是一种布尔断言， 它表述了给定的对象是否满足当前约定的语义。" />
    <meta name="Microsoft.Help.ContentType" content="Concepts" />
    <link rel="stylesheet" type="text/css" href="../styles/Presentation.css" />
    <script type="text/javascript" src="../scripts/EventUtilities.js"></script>
    <script type="text/javascript" src="../scripts/SplitScreen.js"></script>
    <script type="text/javascript" src="../scripts/Dropdown.js"></script>
    <script type="text/javascript" src="../scripts/script_manifold.js"></script>
    <script type="text/javascript" src="../scripts/script_feedBack.js"></script>
    <script type="text/javascript" src="../scripts/CheckboxMenu.js"></script>
    <script type="text/javascript" src="../scripts/CommonUtilities.js"></script>
</head>
<body>
    <input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" />
    <img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" />
    <img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" />
    <img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" />
    <img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" />
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" />
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" />
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" />
    <div id="header">
        <table id="topTable" cellspacing="0" cellpadding="0">
            <tr>
                <td>
                    <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;"
                          onkeypress=" ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0">
                        <img id="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" />
                        <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label>
                        <label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label>
                    </span>
                </td>
            </tr>
        </table>
    </div><div id="mainSection">
        <div id="mainBody">
            <h1 class="heading">
                <span onclick="ExpandCollapse(sectionToggleID0EAAAA)"
                      style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(sectionToggleID0EAAAA, event)"
                      tabindex="0">
                    <img id="sectionToggleID0EAAAA" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />规约模式
                </span>
            </h1><div id="sectionSectionID0EAAAA" class="section" name="collapseableSection">
                <p>
                    规约模式就是DDD引入用来解决以上问题的一种特殊的模式。规约是一种布尔断言，
                    它表述了给定的对象是否满足当前约定的语义。
                </p><p>
                    为了实现复合断言，通常在设计中引入复合规约对象。这样做的好处是，
                    可以充分利用规约的复合来实现复杂的规约组合以及规约树的遍历。不仅如此，
                    在.NET 3.5引入Expression Tree以后，规约将有其特定的实现方式，这个我们在后面讨论。
                    以下是一个经典的实现方式，注意ICompositeSpecification接口，
                    它包含两个属性：Left和Right，ICompositeSpecification是继承于ISpecification接口的，
                    而Left和Right本身也是ISpecification类型，于是，整个Specification的结构就可以看成是一种树状结构。
                </p><div class="mediaNear">
                    <div class="caption">仓库UML</div>
                    <img alt="规约模式" src="../media/规约模式.jpg" width="1000" />
                </div>
            </div>
        </div><div id="footer">
            <div class="footerLine">
                <img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" />
            </div>
            <a name="feedback"></a><span id="fb" class="feedbackcss"></span>
            罗敏贵@版权所有，有问题请联系minguiluo@163.com<p />有关这个主题的评论请发邮件到
            <a id="HT_MailLink" href="mailto:minguiluo%40163.com?Subject=LCL User Guide">发送反馈</a>
            <script type="text/javascript">
                var HT_mailLink = document.getElementById("HT_MailLink");
                var HT_mailLinkText = HT_mailLink.innerHTML;
                HT_mailLink.href += ": " + document.title;
                HT_mailLink.innerHTML = HT_mailLinkText;
            </script><p><a href="http://www.cnblogs.com/luomingui/category/279664.html" target="_blank">LCL User Guide</a></p>
        </div>
    </div>
</body>
</html>